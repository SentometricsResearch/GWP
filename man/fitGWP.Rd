% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitGWP.R
\name{fitGWP}
\alias{fitGWP}
\title{Fit a Generalized Word Power model.}
\usage{
fitGWP(frequencies, responseData, alpha = c(0, 0.2, 0.4, 0.6, 0.8, 1),
  lowerLimit = 0.2)
}
\arguments{
\item{frequencies}{frequencies data.table generated using the function \code{\link{computeFrequencies}}.}

\item{responseData}{data.frame with column \code{regID} and \code{y}. 
\code{regID} should match with the \code{regID} of the \code{frequencies} input while \code{y} is the response variable.}

\item{alpha}{alpha parameter for an elastic-net model.}

\item{lowerLimit}{lower limit on the number of time a sentiment word must appear over all the period. 
If the value is above or equal to 1, this value is absolute. If the value is below 1, this value is in percentage term.}
}
\value{
A list with the following elements:
        \itemize{
        \item scores: data.frame wiht the column \code{word}, \code{score}, and \code{importance}.
        the word column correspond to the sentiment words, the score column correspond to the polarity of the sentiment words,
        and the importance column correspond to the importance of each word withing the calbration sample.
        \item sentiment: data.frame with colmn \code{regID}, \code{SentimentScores}, and \code{y}. 
        the column regID correspond to the regID of each observation, the columne SentimentScores is the sentiment for that observation, 
        and the column y is the initially given reponse variable.
        }
}
\description{
Fit a  Generalized Word Power model on a target variable using word frequency data with an elastic-net model.
}
\examples{
# Load example data
data("corpus",  package = "GWP")
data("vix",  package = "GWP")
# Setup the lexicons
sentimentWord <- sentometrics::list_lexicons$LM_en$x
shifterWord <- sentometrics::list_valence_shifters$en[, c("x", "y")]

# Generate the frequency data
frequencies <- computeFrequencies(corpus, sentimentWord, shifterWord, clusterSize = 5)

# Calibrate the lexicon
res = fitGWP(frequencies = frequencies, responseData = vix)
}
